package com.springmongo.controller;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.springmongo.model.Todo;
import com.springmongo.repo.TodoRepo;

@RestController
public class TodoController {

	@Autowired
	private TodoRepo todoRepo;

	@GetMapping("/todos")
	public ResponseEntity<?> getALLTodos() {
		List<Todo> list = todoRepo.findAll();
		if (list.size() > 0) {
			return ResponseEntity.status(HttpStatus.OK).body(list);
		} else {
			return ResponseEntity.status(HttpStatus.NO_CONTENT).body("No todos found");
		}
	}

	@PostMapping("/saveTodo")
	public ResponseEntity<Todo> createNewTodo(@RequestBody Todo todo) {
		try {
			todo.setCreatedAt(LocalDateTime.now());
			Todo savedTodo = todoRepo.save(todo);
			return ResponseEntity.status(HttpStatus.CREATED).body(savedTodo);
		} catch (Exception e) {
			e.printStackTrace();
			return ResponseEntity.status(HttpStatus.BAD_REQUEST).body(todo);
		}
	}
	
	@GetMapping("/getTodo")
	public ResponseEntity<Todo> getTodo(@PathVariable("id") String id)
	{
		Optional<Todo> todo=todoRepo.findById(id);
		if(todo.isPresent())
		{
			return ResponseEntity.status(HttpStatus.ACCEPTED).body(todo.get());
		}
		else
		{
			return ResponseEntity.status(HttpStatus.NOT_FOUND).body(null);
		}
	}

}
